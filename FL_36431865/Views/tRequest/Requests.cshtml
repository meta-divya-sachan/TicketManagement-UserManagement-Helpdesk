@model TicketManagement.Model.Base<TicketManagement.BLL.tRequest>

@{
    ViewData["Title"] = "Requests";
}

@section styles{
    <link href="~/Content/dataTables.bootstrap4.css" rel="stylesheet">
    <link href="~/Content/custom.min.css" rel="stylesheet">
    <link href="~/Content/toastr.min.css" rel="stylesheet">
    <link href="~/lib/select2/dist/css/select2.min.css" rel="stylesheet" />
}
@section scripts{
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.bootstrap4.min.js"></script>
    <script src="~/Scripts/custom.min.js"></script>
    <script src="~/Scripts/toastr.min.js"></script>
    <script src="~/lib/select2/dist/js/select2.min.js"></script>

    <script>
        $(function () {
            var message = '@TempData["Message"]';
            if (message != null && message != '') {
                var title = '@ViewBag.Title';
                var success = '@TempData["Success"]';
                if (success == "1") {
                    toastr.success(message, title);
                }
                else {
                    toastr.error(message, title);
                }
            }
        });

        $(document).ready(function () {
            var form = $('select[name="s"]').parent().parent();
            $(form).css("display", "none");
        });
    </script>

    <script>
        $('#sortTable').DataTable({
            //language: {
            //    searchPlaceholder: "Search",
            //    search: "",
            //    paginate: {
            //        "first": "Primera",
            //        "last": "Ultima",
            //        "next": "Siguiente",
            //        "previous": "Anterior"
            //    },
            //    info: "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
            //    infoEmpty: "Mostrando 0 to 0 of 0 Entradas",
            //    lengthMenu: "Mostrar _MENU_ Entradas",
            //},
            dom: '<"top"f<"clear">>rt<"bottom"lp<"clear">>',
            order: [[1, 'desc']],
            lengthMenu: [
                [5, 10, 15, -1],
                [5, 10, 15, 'All'],
            ],
        });
    </script>

    <script>
        function SearchByStatus(status) {
            $('#selstatus').val(status);
            $('#btnSearch').click();
        }
    </script>

    <script>

        // Create new
        function CreateNew() {
            $('#hdnAction').val('1');
            $('#spRequestTitle').html('New Request');

            $('.x-textbox-edit').each(function () {
                $(this).attr('readonly', false);
                $(this).val('');
            });

            OpenModal('REQUEST');
        }

        function Edit(requestID, requestTitle) {
            $('#spRequestTitle').text("Request Edition : ");

            var action = '2';
            $('#hdnAction').val(action);
            ShowRequestModal(requestID, action);
        }

        function ShowDetails(requestID, requestTitle) {
            $('#spRequestTitle').text("Request Details : " );

            var action = '0';
            $('#hdnAction').val(action);
            ShowRequestModal(requestID, action);
        }

        function ShowRequestModal(requestID, action) {
            var data = {};
            data.requestID = requestID;
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetRequestByID")",
                async: false,
                data: data,
                dataType: "json",
                success: function (response) {
                    if (response.error == 0) {

                        $('.x-textbox-edit').each(function () {
                            $(this).attr('readonly', action == '2' ? false : true);
                        });

                        var output = response.output;
                        $('#txtxrequestID').val(output.request.requestID);
                        $('#txtxrequestTitle').val(output.request.requestTitle);
                        $('#txtxdescription').val(output.request.description);
                        $('#ddlxrequestType').val(output.request.requestType);
                        $('#txtxlocation').val(output.request.location);
                        $('#hdnAction').val('2');

                        if (action == '2') {
                            $('#lbtnSaveRequest').show();
                        }
                        else {
                            $('#lbtnSaveRequest').hide();
                        }

                        OpenModal('REQUEST');
                    }
                    else {
                        toastr.error(response.message, "");
                    }
                },
                failure: function (response) {
                    toastr.error(response, "");
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    toastr.error(XMLHttpRequest.responseText, "");
                }
            });
        }

        function Save() {
            try {
                var action = $('#hdnAction').val();
                var requestTitle = $('#txtxrequestTitle').val();
                var description = $('#txtxdescription').val();
                var requestType = $('#ddlxrequestType :selected').val();
                var xlocation = $('#txtxlocation').val();

                var mensaje = "";
                if (requestTitle.trim() == '') mensaje = mensaje + "Enter the request title" + "<br />";
                if (description.trim() == '') mensaje = mensaje + "Enter the request description" + "<br />";
                if (requestType.trim() == '') mensaje = mensaje + "Select the request type" + "<br />";
                if (xlocation.trim() == '') mensaje = mensaje + "Enter the request location" + "<br />";
                if (mensaje != "") throw mensaje;

                if (action == '1')
                {
                    var data = {};
                    data.requestTitle = requestTitle;
                    data.description = description;
                    data.requestType = requestType;
                    data.location = xlocation;
                    $.ajax({
                        type: "POST",
                        url: "@Url.Action("CreateNewRequest")",
                        async: false,
                        data: data,
                        dataType: "json",
                        success: function (response) {
                            if (response.error == 0) {
                                location.reload();
                            }
                            else {
                                toastr.error(response.message, "");
                            }
                        },
                        failure: function (response) {
                            toastr.error(response, "");
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            toastr.error(XMLHttpRequest.responseText, "");
                        }
                    });
                }
            }
            catch (error) {
                toastr.error(error, "");
            }
        }


        // Reassign
        function Reasign(requestID, requestTitle) {
            $('#spReassignTitle').text("Request Details : " );
            $('#hdnyrequestID').val(requestID);

            var data = {};
            data.requestID = requestID;
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetRequestByID")",
                async: false,
                data: data,
                dataType: "json",
                success: function (response) {
                    if (response.error == 0) {

                        var output = response.output;
                        $('#txtyassignedUserName').val(output.request.assignedUserName);
                        $('#hdnyassignedUser').val(output.request.assignedUser);

                        OpenModal('REASSIGN');
                    }
                    else {
                        toastr.error(response.message, "");
                    }
                },
                failure: function (response) {
                    toastr.error(response, "");
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    toastr.error(XMLHttpRequest.responseText, "");
                }
            });
        }

        // Reassign
        function SaveReassign() {
            try
            {
                var requestID = $('#hdnyrequestID').val();
                var assignedUser = $('#hdnyassignedUser').val();
                var reassignedUser = $('#ddlyassignedUser :selected').val();

                var mensaje = "";
                if (assignedUser == reassignedUser) mensaje = mensaje + "Cannot reassign to the same user" + "<br />";
                if (mensaje != "") throw mensaje;

                if (confirm('The request "' + requestID + '" will be reassigned. Continue?') == false) {
                    return false;
                }

                var data = {};
                data.requestID = requestID;
                data.assignedUser = reassignedUser;
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("ReassignRequest")",
                    async: false,
                    data: data,
                    dataType: "json",
                    success: function (response) {
                        if (response.error == 0) {
                            location.reload();
                        }
                        else {
                            toastr.error(response.message, "");
                        }
                    },
                    failure: function (response) {
                        toastr.error(response, "");
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        toastr.error(XMLHttpRequest.responseText, "");
                    }
                });
            }
            catch (error) {
                toastr.error(error, "");
            }
        }


        // Process
        function Process(requestID, requestTitle) {
            $('#spProcessTitle').text("Request Details : ");
            $('#hdntrequestID').val(requestID);

            var data = {};
            data.requestID = requestID;
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetRequestByID")",
                async: false,
                data: data,
                dataType: "json",
                success: function (response) {
                    if (response.error == 0) {

                        var output = response.output;
                        $('#txttsituationName').val(output.request.situationName);
                        $('#hdnyassignedUser').val(output.request.situation);

                        var situation = output.request.situation;
                        if (situation == 1)
                        {
                            $('#hdntnewSituation').val(2);
                            $('#txttnewSituationName').val('In Progress');
                        }
                        else
                        {
                            $('#hdntnewSituation').val(3);
                            $('#txttnewSituationName').val('Resolved');
                        }
                        $('#txttcomments').val('');

                        OpenModal('PROCESS');
                    }
                    else {
                        toastr.error(response.message, "");
                    }
                },
                failure: function (response) {
                    toastr.error(response, "");
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    toastr.error(XMLHttpRequest.responseText, "");
                }
            });
        }

        // Process
        function SaveProcess() {
            try
            {
                var requestID = $('#hdntrequestID').val();
                var situation = $('#hdntnewSituation').val();
                var comments = $('#txttcomments').val();

                if (confirm('The request "' + requestID + '" will be processed. Continue?') == false) {
                    return false;
                }

                var data = {};
                data.requestID = requestID;
                data.situation = situation;
                data.comments = comments;
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("ProcessRequest")",
                    async: false,
                    data: data,
                    dataType: "json",
                    success: function (response) {
                        if (response.error == 0) {
                            location.reload();
                        }
                        else {
                            toastr.error(response.message, "");
                        }
                    },
                    failure: function (response) {
                        toastr.error(response, "");
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        toastr.error(XMLHttpRequest.responseText, "");
                    }
                });
            }
            catch (error) {
                toastr.error(error, "");
            }
        }


        // Comments
        function ShowComments(requestID, requestTitle) {
            $('#spCommentsTitle').text("Request Details : ");
            $('#hdncrequestID').val(requestID);
            $('#hdncrequestTitle').val(requestTitle);

            var data = {};
            data.requestID = requestID;
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetCommentsByRequestID")",
                async: false,
                data: data,
                dataType: "json",
                success: function (response) {
                    if (response.error == 0) {

                        var data = response.output;
                        var tbody = $('#tbComments');
                        tbody.html('');

                        var html = '';
                        $(data).each(function (index, comment) {
                            html = html + '<tr>';
                            html = html + '<td>' + comment.commentID + '</td>';
                            html = html + '<td>' + comment.comment + '</td>';
                            html = html + '<td>' + comment.creationUserName + '</td>';
                            html = html + '<td>' + comment.creationDateT + '</td>';
                            html = html + '</tr>';
                        });
                        tbody.prepend(html);

                        OpenModal('COMMENTS');
                    }
                    else {
                        toastr.error(response.message, "");
                    }
                },
                failure: function (response) {
                    toastr.error(response, "");
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    toastr.error(XMLHttpRequest.responseText, "");
                }
            });
        }

        // Add comment
        function AddComment() {
            $('#txtcomments').val('');
            OpenModal('COMMENT');
            CloseModal('COMMENTS');
            OpenModal('COMMENTS');
        }

        // Save comment
        function SaveComment() {
            try {
                var requestID = $('#hdncrequestID').val();
                var requestTitle = $('#hdncrequestTitle').val();
                var comment = $('#txtcomments').val();

                var message = '';
                if (comment.trim() == '') message = message + 'Enter the comments' + '<br />';
                if (message != '') throw message;

                var data = {};
                data.requestID = requestID;
                data.comment = comment;
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("CreateNewComment")",
                    async: false,
                    data: data,
                    dataType: "json",
                    success: function (response) {
                        if (response.error == 0) {
                            CloseModal('COMMENT');
                            CloseModal('COMMENTS');
                            ShowComments(requestID, requestTitle);
                        }
                        else {
                            toastr.error(response.message, "");
                        }
                    },
                    failure: function (response) {
                        toastr.error(response, "");
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        toastr.error(XMLHttpRequest.responseText, "");
                    }
                });
            }
            catch (error) {
                toastr.error(error, "");
            }
        }
@*        //chnage the ticket situation
        function ChangeSituation(requestID, requestTitle) {
            $('#spReassignTitle').text("Request Details : " );
            $('#hdnyrequestID').val(requestID);

            var data = {};
            data.requestID = requestID;
            $.ajax({
                type: "POST",
                url: "@Url.Action("GetRequestByID")",
                async: false,
                data: data,
                dataType: "json",
                success: function (response) {
                    if (response.error == 0) {

                        var output = response.output;
                        $('#txtyassignedUserName').val(output.request.assignedUserName);
                        $('#hdnyassignedUser').val(output.request.assignedUser);

                        OpenModal('REASSIGN');
                    }
                    else {
                        toastr.error(response.message, "");
                    }
                },
                failure: function (response) {
                    toastr.error(response, "");
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    toastr.error(XMLHttpRequest.responseText, "");
                }
            });
        }

        // save the change in role
        function SaveChangeSituation() {
            try
            {
                var requestID = $('#hdnyrequestID').val();
                var assignedUser = $('#hdnyassignedUser').val();
                var reassignedUser = $('#ddlyassignedUser :selected').val();

                var mensaje = "";
                if (assignedUser == reassignedUser) mensaje = mensaje + "Cannot reassign to the same user" + "<br />";
                if (mensaje != "") throw mensaje;

                if (confirm('The request "' + requestID + '" will be reassigned. Continue?') == false) {
                    return false;
                }

                var data = {};
                data.requestID = requestID;
                data.assignedUser = reassignedUser;
                $.ajax({
                    type: "POST",
                    url: "@Url.Action("ReassignRequest")",
                    async: false,
                    data: data,
                    dataType: "json",
                    success: function (response) {
                        if (response.error == 0) {
                            location.reload();
                        }
                        else {
                            toastr.error(response.message, "");
                        }
                    },
                    failure: function (response) {
                        toastr.error(response, "");
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        toastr.error(XMLHttpRequest.responseText, "");
                    }
                });
            }
            catch (error) {
                toastr.error(error, "");
            }
        }


        //change the ticket situation*@

    </script>
}
@section SideUserName{
    @Session["_USERNAME"].ToString()
}
@section TopUserName{
    @Session["_USERNAME"].ToString()
}
@section ViewName{
    <h4 style="margin-top:20px !important">
        <strong>Requests</strong>
    </h4>
}

<!-- page content -->
<div class="right_col" role="main">
    <div class="">
        <form action="Requests" method="post">
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="col-md-12 col-xs-12">
@*
                    <div class="x_panel">
                        <div class="x_title">
                            <h2>Search Filters <small></small></h2>
                            <ul class="nav navbar-right panel_toolbox">
                                <li>
                                    <a class="collapse-link"><i class="fa fa-chevron-down"></i></a>
                                </li>
                            </ul>
                            <div class="clearfix"></div>
                        </div>
                        <div class="x_content collapse">
                            <div class="row">*@
                                <!--<div class="col-md-2">
                                    <div class="form-group">-->
@*                                        @Html.TextBoxFor(modelItem => Model.Data.requestID, new { @id = "txtrequestID", @class = "form-control", @type = "text", @placeholder = "Request ID" })
*@                                        @*<input id="txtrequestID" asp-for="@Model.Data.requestID" class="form-control" type="text" placeholder="Request ID" />*@
                                    <!--</div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">-->
@*                                        @Html.TextBoxFor(modelItem => Model.Data.requestTitle, new { @id = "txtrequestTitle", @class = "form-control", @type = "text", @placeholder = "Request Title" })
*@                                        @*<input id="txtrequestTitle" asp-for="@Model.Data.requestTitle" class="form-control" type="text" placeholder="Request Title" />*@
                                    <!--</div>
                                </div>-->
                                <!--<div class="col-md-2">
                                    <div class="form-group">-->
                                        @*@{
                                            var lista = new List<KeyValuePair<string, string>>();
                                            lista.Add(new KeyValuePair<string, string>("-1", "All"));
                                            lista.Add(new KeyValuePair<string, string>("1", "Open"));
                                            lista.Add(new KeyValuePair<string, string>("0", "Closed"));
                                        }*@<!---->
@*                                        @Html.DropDownListFor(modelItem => Model.Data.status, new SelectList(lista, "key", "value"), "Select", new { @class = "form-control", @id = "selstatus", @style = "width: 100%; " })
*@                                        @*<select id="selstatus" asp-for="@Model.Data.status" class="form-control">
                                                <option value="-1">All</option>
                                                <option value="1">Open</option>
                                                <option value="0">Closed</option>
                                            </select>*@
                                    <!--</div>
                                </div>-->
                                <div class="col-md-2">
                                    <div class="form-group">
                                        @{
                                            var xlista = new List<KeyValuePair<string, string>>();
                                            xlista.Add(new KeyValuePair<string, string>("-1", "All"));
                                            xlista.Add(new KeyValuePair<string, string>("1", "Assigned"));
                                            xlista.Add(new KeyValuePair<string, string>("2", "In Progress"));
                                            xlista.Add(new KeyValuePair<string, string>("3", "Resolved"));
                                            xlista.Add(new KeyValuePair<string, string>("0", "Closed"));
                                        }
                                        @Html.DropDownListFor(modelItem => Model.Data.situation, new SelectList(xlista, "key", "value"), "Select", new { @class = "form-control", @id = "selsituation", @style = "width: 100%; " })
                                        @*<select id="selsituation" asp-for="@Model.Data.situation" class="form-control">
                                                <option value="-1">All</option>
                                                <option value="1">Assigned</option>
                                                <option value="2">In Progress</option>
                                                <option value="3">Resolved</option>
                                                <option value="0">Closed</option>
                                            </select>*@
                                    </div>
                                </div>
                                <div class="col-md-1">
                                    <div class="form-group">
                                        <input id="btnSearch" type="submit" class="btn btn-link" value="Search" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="x_panel">
                        <div class="x_content">

                            <ul class="nav nav-tabs">
                                <li class="@(Model.Data.status == 1 ? "active" : "" )">
                                    <a onclick="SearchByStatus('1');" style="cursor:pointer;">Active</a>
                                </li>
                                <li class="@(Model.Data.status == 0 ? "active" : "" )">
                                    <a onclick="SearchByStatus('0');" style="cursor:pointer;">Inactive</a>
                                </li>
                                <li class="@(Model.Data.status == -1 ? "active" : "" )">
                                    <a onclick="SearchByStatus('-1');" style="cursor:pointer;">All</a>
                                </li>
                            </ul>

                            <br />

                            @{
                                var role = 0;
                                var roles = TicketManagement.Helpers.Functions.Deserialize<List<TicketManagement.BLL.sRole>>(Session["_USERROLES"].ToString());
                                if (roles.Where(c => new List<int>() { 1, 2 }.Contains(c.roleID)).Count() > 0)
                                {
                                    role = 2;
                                }
                                else if (roles.Where(c => new List<int>() { 3 }.Contains(c.roleID)).Count() > 0)
                                {
                                    role = 3;
                                }
                                else
                                {
                                    role = 4;
                                }
                            }

                            @if (Model != null && Model.Items.Count > 0)
                            {
                                <table class="table table-striped table-bordered" id="sortTable">
                                    <thead>
                                        <tr>
                                            <th>Code</th>
                                            <th class="col-md-2">Title</th>
                                            <th class="col-md-2">Type</th>
                                            <th class="col-md-3">Description</th>
                                            <th class="col-md-1">Situation</th>
                                            <th class="col-md-2">Assigned</th>
                                            <th class="col-md-2 text-right">Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.Items)
                                        {
                                            <tr>
                                                <td class="text-center">
                                                    <strong title="@item.requestID">@Html.DisplayFor(modelItem => item.requestID)</strong>
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.requestTitle)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.requestTypeName)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.description)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.situationName)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.assignedUserName)
                                                </td>
                                                <td class="text-right">
                                                    <a class='x-action-button' onclick='ShowDetails("@item.requestID", "@item.requestTitle");' href='javascript:;'>Details |</a>
                                                    @if (role == 4) // Requester
                                                    {
                                                        if (item.status == 1) // Open
                                                        {
                                                            <a class='x-action-button' onclick='ShowComments("@item.requestID", "@item.requestTitle");' href='javascript:;'>Comments</a>
                                                            if (item.situation == 3) // Resolved
                                                            {
                                                                <a class='x-action-button' onclick='ChangeSituation("@item.requestID", "@item.requestTitle");' href='javascript:;'>| Change</a>
                                                            }
                                                        }
                                                    }
                                                    else if (role == 3) // Manager
                                                    {
                                                        if (item.status == 1) // Open
                                                        {
                                                            <a class='x-action-button' onclick='ShowComments("@item.requestID", "@item.requestTitle");' href='javascript:;'>Comments</a>
                                                            if (item.situation != 3) // ! Resolved
                                                            {
                                                                <a class='x-action-button' onclick='Process("@item.requestID", "@item.requestTitle");' href='javascript:;'>| Process</a>
                                                            }
                                                        }
                                                    }
                                                    else if (role == 2) // Admin
                                                    {
                                                        if (item.status == 1) // Open
                                                        {
                                                            <a class='x-action-button' onclick='ShowComments("@item.requestID", "@item.requestTitle");' href='javascript:;'>Comments</a>
                                                            if (item.situation != 3) // ! Resolved
                                                            {
                                                                <a class='x-action-button' onclick='Reasign("@item.requestID", "@item.requestTitle");' href='javascript:;'>| Reassign</a>
                                                            }
                                                        }
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                            else
                            {
                                <div class="row" style="margin: 0px">
                                    <div class="col-md-12 col-xs-12" style="border: 1px solid #ccc;">
                                        <h5><strong>No records found</strong></h5>
                                    </div>
                                </div>
                            }

                            <br />
                            <br />

                            @if (role == 4) // Requester
                            {
                                <strong><a class="btn btn-primary" onclick="CreateNew();"><span class="fa fa-plus"></span> Create new request</a></strong>
                            }
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<div id="modalREQUEST" class="modal" role="dialog">
    <div class="modal-dialog modal-md">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" style="color:#fff">&times;</button>
                <h4 class="modal-title"><span id="spRequestTitle"></span></h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-2">
                        <span>Request ID</span>
                        <div class="form-group">
                            <input type="text" id="txtxrequestID" class="form-control" readonly />
                        </div>
                    </div>
                    <div class="col-lg-10">
                        <span>Request Title</span>
                        <div class="form-group">
                            <input type="text" id="txtxrequestTitle" class="form-control x-textbox-edit" maxlength="250" />
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <span>Description</span>
                        <div class="form-group">
                            <textarea id="txtxdescription" rows="4" class="form-control x-textbox-edit"></textarea>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <span>Request Type</span>
                        <div class="form-group">
                            <select id="ddlxrequestType" class="form-control x-textbox-edit" style="width: 100%;">
                                @foreach (var item in ViewBag.ListOfRequestTypes)
                                {
                                    <option value="@item.value">@item.text</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <span>Location</span>
                        <div class="form-group">
                            <input type="text" id="txtxlocation" class="form-control x-textbox-edit" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="hidden" id="hdnAction" />
                <button type="button" class="btn btn-default" id="lbtnSaveRequest" onclick="Save();">
                    <span class="glyphicon glyphicon-search"></span> Save Request
                </button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="modalREASSIGN" class="modal" role="dialog">
    <div class="modal-dialog modal-md">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" style="color:#fff">&times;</button>
                <h4 class="modal-title"><span id="spReassignTitle"></span></h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <span>Assigned Manager</span>
                        <div class="form-group">
                            <input type="text" id="txtyassignedUserName" class="form-control" readonly />
                            <input type="hidden" id="hdnyassignedUser" />
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <span>New Manager</span>
                        <div class="form-group">
                            <select id="ddlyassignedUser" class="form-control x-textbox-edit" style="width: 100%;">
                                @foreach (var item in ViewBag.ListOfManagers)
                                {
                                    <option value="@item.userCode">@item.userName</option>
                                }
                            </select>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="hidden" id="hdnyrequestID" />
                <button type="button" class="btn btn-default" id="lbtnSaveReassign" onclick="SaveReassign();">
                    <span class="glyphicon glyphicon-search"></span> Reassign
                </button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="modalPROCESS" class="modal" role="dialog">
    <div class="modal-dialog modal-md">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" style="color:#fff">&times;</button>
                <h4 class="modal-title"><span id="spProcessTitle"></span></h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <span>Actual Situation</span>
                        <div class="form-group">
                            <input type="text" id="txttsituationName" class="form-control" readonly />
                            <input type="hidden" id="hdntsituation" />
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <span>New Situation</span>
                        <div class="form-group">
                            <input type="text" id="txttnewSituationName" class="form-control" readonly />
                            <input type="hidden" id="hdntnewSituation" />
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <span>Comments</span>
                        <div class="form-group">
                            <textarea id="txttcomments" class="form-control" rows="4"></textarea>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <input type="hidden" id="hdntrequestID" />
                <button type="button" class="btn btn-default" id="lbtnSaveProcess" onclick="SaveProcess();">
                    <span class="glyphicon glyphicon-search"></span> Process
                </button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="modalCOMMENTS" class="modal" role="dialog">
    <div class="modal-dialog modal-lg">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" style="color:#fff">&times;</button>
                <h4 class="modal-title"><span id="spCommentsTitle"></span></h4>
                <input type="hidden" id="hdncrequestID" />
                <input type="hidden" id="hdncrequestTitle" />
            </div>
            <div class="modal-body">
                <table class="table table-striped table-bordered">
                    <thead>
                        <tr>
                            <th>ID</th>
                            <th class="col-md-7">Details</th>
                            <th class="col-md-2">User</th>
                            <th class="col-md-3">Date</th>
                        </tr>
                    </thead>
                    <tbody id="tbComments">
                    </tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="lbtnAddComment" onclick="AddComment();">
                    <span class="glyphicon glyphicon-search"></span> Add comment
                </button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="modalCOMMENT" class="modal" role="dialog">
    <div class="modal-dialog modal-md">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" style="color:#fff">&times;</button>
                <h4 class="modal-title">New comment</h4>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <textarea id="txtcomments" rows="10" class="form-control"></textarea>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" id="lbtnSaveComment" onclick="SaveComment();">
                    <span class="glyphicon glyphicon-search"></span> Save comment
                </button>
                <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>